name: Install tools
description:
  Installs tools needed for `action-setup-tools` testing on hosted agents
runs:
  using: composite
  steps:
    - name: install goenv
      shell: bash
      run: |
        function _wget_untar {
          # Download $1 to $2
          mkdir -p "$2"
          wget -qO- "$1" | tar xz --strip-components=1 -C "$2"
        }
        GOENV_ROOT="${HOME}/.goenv"
        _wget_untar "https://github.com/syndbg/goenv/archive/refs/heads/master.tar.gz" "$GOENV_ROOT"
        export PATH="$PATH:$GOENV_ROOT/bin"
        eval "$(goenv init -)"
        GO_VERSION=$(goenv --version)
        echo "goenv '$GO_VERSION'"
        echo "$GOENV_ROOT/bin" >> "$GITHUB_PATH"
    - name: install nodenv
      shell: bash
      run: |
        NODENV_ROOT="${HOME}/.nodenv"
        # This probably won't be functional until we have a paired action that sets
        # up the PATH and shims correctly, but at least it's installed
        export PATH="$PATH:$NODENV_ROOT/shims"
        wget -qO- "https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer" | bash
        # _update_profile NODENV_ROOT 'eval "$(nodenv init --path)"; eval "$(nodenv init -)"; eval "$(nodenv virtualenv-init -)"'
        eval "$(nodenv init -)"
        eval "$(nodenv init --path)"

        NODENV_VERSION=$(nodenv --version)
        echo "nodenv '$NODENV_VERSION'"
        echo "$NODENV_ROOT/shims" >> "$GITHUB_PATH"
    - name: install pyenv
      shell: bash
      run: |
        PYENV_ROOT="${HOME}/.pyenv"
        export PATH="$PATH:$PYENV_ROOT/bin"
        wget -qO- "https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer" | bash
        echo "PATH=$PATH"
        ls -l "$PYENV_ROOT/bin"
        eval "$(pyenv init -)"
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)"
        PYENV_VERSION=$(pyenv --version)
        echo "pyenv '$PYENV_VERSION'"
        echo "$PYENV_ROOT/bin" >> "$GITHUB_PATH"
    - name: install sdkman
      shell: bash
      run: |
        curl -s "https://get.sdkman.io" | bash
        source "/home/runner/.sdkman/bin/sdkman-init.sh"
        SDKMAN_VERSION=$(sdk version)
        echo "sdkman '$SDKMAN_VERSION'"
        echo "SDKMAN_DIR=$HOME/.sdkman" >> "$GITHUB_ENV"
        mkdir -p "$HOME/.sdkman/bin"
        echo "$HOME/.sdkman/bin" >> "$GITHUB_PATH"

        cat << EOF > "$HOME/.sdkman/bin/sdk"
        #!/bin/bash
        export SDKMAN_DIR="\$HOME/.sdkman"
        SDKMAN_INIT_FILE="\$SDKMAN_DIR/bin/sdkman-init.sh"
        if [[ ! -s "\$SDKMAN_INIT_FILE" ]]; then exit 13; fi
        if [[ -z "\$SDKMAN_AVAILABLE" ]]; then source "\$SDKMAN_INIT_FILE" >/dev/null; fi
        export -f
        sdk "\$@"
        EOF
        chmod a+x "$HOME/.sdkman/bin/sdk"

        export PATH="$PATH:$HOME/.sdkman/bin"
        SDKMAN_VERSION=$(sdk version)
        echo "sdkman '$SDKMAN_VERSION'"

    - name: install tfenv
      shell: bash
      run: |
        function _wget_untar {
          # Download $1 to $2
          mkdir -p "$2"
          wget -qO- "$1" | tar xz --strip-components=1 -C "$2"
        }
        TFENV_VERSION="v2.2.2"
        echo "Installing"
        echo "version=$TFENV_VERSION"
        TFENV_ROOT="${HOME}/.tfenv"
        _wget_untar "https://github.com/tfutils/tfenv/archive/refs/tags/${TFENV_VERSION}.tar.gz" "$TFENV_ROOT"
        # _update_profile TFENV_ROOT
        export PATH="$PATH:$TFENV_ROOT/bin"

        TFENV_VERSION=$(tfenv --version)
        echo "tfenv '$TFENV_VERSION'"
        echo "$TFENV_ROOT/bin" >> "$GITHUB_PATH"
    - name: check installs
      shell: bash
      run: |
        echo "PATH=$PATH"
        GO_VERSION=$(goenv --version)
        echo "goenv '$GO_VERSION'"
        NODENV_VERSION=$(nodenv --version)
        echo "nodenv '$NODENV_VERSION'"
        PYENV_VERSION=$(pyenv --version)
        echo "pyenv '$PYENV_VERSION'"
        SDKMAN_VERSION=$(sdk version)
        echo "sdkman '$SDKMAN_VERSION'"
