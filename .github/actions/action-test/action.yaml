name: Action Test
description: Tests the action directly
inputs:
  use-versions:
    description: "Use versions"
    default: "true"
    required: true
  node:
    description: 'Node.js version to install (e.g., "20" or "20.18.1")'
    required: false
runs:
  using: composite
  steps:
    - name: Check out repo
      uses: actions/checkout@v4
      if: hashFiles('action.yaml') == ''
    - name: Install and build package
      shell: bash
      run: npm ci
    - name: Run action using inputs
      if: inputs.use-versions == 'true'
      uses: ./versions
      with:
        go: 1.17.6
        # java: 17.0.2-tem  # TODO: Uncomment when sdkman isn't broken
        node: 16.13.2
        python: 3.10.2
        terraform: 1.1.5
    - name: Create version files
      shell: bash
      if: inputs.use-versions != 'true'
      run: |
        # Write version files
        # echo "java=17.0.2-tem" > .sdkmanrc  # TODO: Broooken
        echo "16.13.2" > .node-version
        echo "3.10.2" > .python-version
        echo "1.17.6" > .go-version
        echo "1.1.5" > .terraform-version
    - name: Run action using version files
      if: inputs.use-versions != 'true'
      uses: ./
    - shell: bash
      run: |
        # Check versions
        go version | grep "1.17.6" || echo "::error::go version mismatch"
        # java -version 2>&1 | grep "17.0.2" || echo "::error::java version mismatch"  # TODO: Busted
        node --version | grep "16.13.2" || echo "::error::node version mismatch"
        yarn --version || echo "::error::yarn not available"
        python --version || grep "3.10.2" || echo "::error::python version mismatch"
        terraform --version | grep "1.1.5" || echo "::error::terraform version mismatch"
